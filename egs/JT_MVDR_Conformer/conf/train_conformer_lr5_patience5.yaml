# network architecture
# encoder related
elayers: 12
eunits: 2048
# decoder related
dlayers: 6
dunits: 2048
# attention related
adim: 256
aheads: 4

# hybrid CTC/attention
mtlalpha: 0.3

# label smoothing
lsm-weight: 0.1

# minibatch related
batch-size: 24
maxlen-in: 512  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 150 # if output length > maxlen-out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: noam
accum-grad: 2
grad-clip: 5
patience: 5
epochs: 100
dropout-rate: 0.1

# transformer specific setting
backend: pytorch
model-module: "espnet.JT_training.e2e_asr_conformer:E2E"
transformer-input-layer: conv2d     # encoder architecture type
transformer-lr: 5.0
transformer-warmup-steps: 25000
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: false
transformer-init: pytorch

# conformer specific setting
transformer-encoder-pos-enc-layer-type: rel_pos
transformer-encoder-selfattn-layer-type: rel_selfattn
transformer-encoder-activation-type: swish
macaron-style: true
use-cnn-module: true
cnn-module-kernel: 31

n-iter-processes: 12

############# customized #############
# visual pca
asr-use-visual: false
use-pca: true
vidim: 80

use-frontend-loss: false
# frontend related
use-frontend: true
use-beamforming-first: false
# beamforming
use-beamformer: true
beamformer-type: mvdr  # wpd
## when beamformer-type=mvdr, set use-clean-ref=False when joint two loss training;
## when beamformer-type=mvdr, set use-clean-ref=True when to check the sisnr loss compared with pipeline results.
##  others to derevb: True
use-clean-ref: False

## init Front end model 
mvdr-frozen: false
init-frontend-mvdr: /users/bdda/gnli/projects/bdda7_projects/TASLP-22/Front-End/separation/summary_0lipemb-LPS+IPD+AF-SISNR+SISNR_NOISE/model_mvdr-AF_premasking=False-Batch_Size=32-Dloading=1e-5/uTGT-LPS_IPD_AF-b32-BN-fd1-fixTrue-f0-cosTrue-sinFalse-best-79.pt.tar

# init Back end asr model
asr-frozen: false
init-asr: /users/bdda/gnli/projects/bdda7_projects/TASLP-22/Back-End/asr_lrs2/T4-sys1_asr_online_ao_mvdr/exp/pretrain_Train_pytorch_train_conformer_lr5_patience5/results/model.val5.avg.best
